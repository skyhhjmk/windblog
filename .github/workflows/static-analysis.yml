name: Static Analysis

on:
  push:
    branches: ['**']  # ‰ªª‰ΩïÂàÜÊîØÊé®ÈÄÅÈÉΩËß¶Âèë
  pull_request:
    branches: ['**']  # ‰ªª‰ΩïÂàÜÊîØÁöÑPRÈÉΩËß¶Âèë

jobs:
  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Static Analysis
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, pgsql, bcmath, intl, gd, exif, iconv
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run PHPStan and generate report
      continue-on-error: true
      run: |
        vendor/bin/phpstan analyze --error-format=github --no-progress || true
        vendor/bin/phpstan analyze --error-format=json --no-progress > phpstan-report.json || true

    - name: Upload PHPStan Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: phpstan-report
        path: phpstan-report.json
        retention-days: 30

    - name: Comment PR with PHPStan summary
      if: github.event_name == 'pull_request' && always()
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          try {
            if (!fs.existsSync('phpstan-report.json')) {
              console.log('No PHPStan report found');
              return;
            }

            const reportData = fs.readFileSync('phpstan-report.json', 'utf8');
            const report = JSON.parse(reportData);

            const errorCount = report.totals?.errors || 0;
            const fileCount = report.totals?.file_errors || 0;

            if (errorCount > 0) {
              const comment = '## üîç PHPStan ÈùôÊÄÅÂàÜÊûêÊä•Âëä\n\n' +
                '**ÂèëÁé∞ ' + errorCount + ' ‰∏™ÈóÆÈ¢ò**ÔºåÊ∂âÂèä ' + fileCount + ' ‰∏™Êñá‰ª∂\n\n' +
                '### ‰∏ªË¶ÅÈóÆÈ¢òÁ±ªÂûã\n' +
                '- Áº∫Â∞ëÁ±ªÂûãÂ£∞Êòé\n' +
                '- Á±ªÂûã‰∏çÂåπÈÖç\n' +
                '- ÈÄªËæëÈîôËØØ\n\n' +
                '### Â¶Ç‰ΩïÊü•ÁúãËØ¶ÊÉÖ\n' +
                'üì• ÂÆåÊï¥Êä•ÂëäÂ∑≤‰øùÂ≠ò‰∏∫ ArtifactÔºåÂèØÂú® Actions È°µÈù¢‰∏ãËΩΩÊü•Áúã„ÄÇ\n\n' +
                '### Âª∫ËÆÆ\n' +
                'Âª∫ËÆÆÈÄêÊ≠•‰øÆÂ§çËøô‰∫õÈóÆÈ¢ò‰ª•ÊèêÈ´ò‰ª£Á†ÅË¥®Èáè„ÄÇÂèØ‰ª•ÂÖà‰ªé level 6 Èôç‰ΩéÂà∞ level 5 ‰ª•ÂáèÂ∞ëÊ£ÄÊü•‰∏•Ê†ºÂ∫¶„ÄÇ';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Error processing PHPStan report:', error.message);
          }

  php-cs-fixer:
    runs-on: ubuntu-latest
    name: PHP CS Fixer
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: php-cs-fixer, composer:v2, cs2pr

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run PHP CS Fixer and generate report
      continue-on-error: true
      run: |
        vendor/bin/php-cs-fixer fix --dry-run --diff --format=checkstyle > php-cs-fixer-report.xml || true

    - name: Show annotations in PR
      if: always()
      continue-on-error: true
      run: |
        if [ -f php-cs-fixer-report.xml ] && [ -s php-cs-fixer-report.xml ]; then
          cat php-cs-fixer-report.xml | cs2pr || true
        else
          echo "No PHP CS Fixer issues found or report is empty"
        fi

    - name: Upload PHP CS Fixer Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: php-cs-fixer-report
        path: php-cs-fixer-report.xml
        retention-days: 30

    - name: Comment PR with summary
      if: github.event_name == 'pull_request' && always()
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          try {
            if (!fs.existsSync('php-cs-fixer-report.xml')) {
              console.log('No PHP CS Fixer report found');
              return;
            }

            const xmlData = fs.readFileSync('php-cs-fixer-report.xml', 'utf8');

            // ÁÆÄÂçïËß£Êûê XMLÔºöÁªüËÆ° <file> Âíå <error> Ê†áÁ≠æÊï∞Èáè
            const fileMatches = xmlData.match(/<file[^>]*>/g) || [];
            const errorMatches = xmlData.match(/<error[^>]*>/g) || [];

            const fileCount = fileMatches.length;
            const issueCount = errorMatches.length;

            if (issueCount > 0) {
              const pr = context.payload.pull_request;
              const branch = pr.head.ref;
              const prNumber = pr.number;
              
              // ÊûÑÂª∫ workflow dispatch URL
              const fixUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/code-style-fix.yml`;
              
              const comment = '## üé® PHP CS Fixer Report\n\n' +
                '**ÂèëÁé∞‰ª£Á†ÅÈ£éÊ†ºÈóÆÈ¢ò**: ' + issueCount + ' ‰∏™ÈóÆÈ¢òÔºåÊ∂âÂèä ' + fileCount + ' ‰∏™Êñá‰ª∂\n\n' +
                '### üîß Ëá™Âä®‰øÆÂ§ç\n\n' +
                'ÁÇπÂáª‰∏ãÊñπÊåâÈíÆ‰∏ÄÈîÆ‰øÆÂ§çÊâÄÊúâ‰ª£Á†ÅÊ†∑ÂºèÈóÆÈ¢òÔºö\n\n' +
                '[![Auto Fix](https://img.shields.io/badge/üîß-Auto_Fix_Code_Style-success?style=for-the-badge)](' + fixUrl + ')\n\n' +
                '> **‰ΩøÁî®ËØ¥Êòé**ÔºöÁÇπÂáª‰∏äÊñπÊåâÈíÆÂêéÔºåÂú®ÊâìÂºÄÁöÑÈ°µÈù¢‰∏≠Ôºö\n' +
                '> 1. ÁÇπÂáªÂè≥‰æß "Run workflow" ÊåâÈíÆ\n' +
                '> 2. ËæìÂÖ• PR Number: `' + prNumber + '`\n' +
                '> 3. ËæìÂÖ• Branch: `' + branch + '`\n' +
                '> 4. ÁÇπÂáª "Run workflow" ÊâßË°åËá™Âä®‰øÆÂ§ç\n\n' +
                '### üìã ÊâãÂä®‰øÆÂ§ç\n\n' +
                'ÊàñÂú®Êú¨Âú∞ËøêË°å‰ª•‰∏ãÂëΩ‰ª§Ôºö\n' +
                '```bash\n' +
                'vendor/bin/php-cs-fixer fix\n' +
                '```\n\n' +
                'üì• ËØ¶ÁªÜÊä•ÂëäÂ∑≤‰øùÂ≠ò‰∏∫ ArtifactÔºåÂèØÂú® Actions È°µÈù¢‰∏ãËΩΩÊü•Áúã„ÄÇ';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              const comment = '## ‚úÖ PHP CS Fixer Check Passed\n\n' +
                '‰ª£Á†ÅÊ†∑ÂºèÊ£ÄÊü•ÈÄöËøáÔºåÊó†ÈúÄ‰øÆÂ§ç„ÄÇ';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Error processing PHP CS Fixer report:', error.message);
          }

  security:
    runs-on: ubuntu-latest
    name: Security Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Security Check
      uses: symfonycorp/security-checker-action@v5
