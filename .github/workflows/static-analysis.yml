name: Static Analysis

on:
  push:
    branches: ['**']  # 任何分支推送都触发
  pull_request:
    branches: ['**']  # 任何分支的PR都触发

jobs:
  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Static Analysis
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, pgsql, bcmath, intl, gd, exif, iconv
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run PHPStan and generate report
      continue-on-error: true
      run: |
        vendor/bin/phpstan analyze --error-format=github --no-progress || true
        vendor/bin/phpstan analyze --error-format=json --no-progress > phpstan-report.json || true

    - name: Upload PHPStan Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: phpstan-report
        path: phpstan-report.json
        retention-days: 30

    - name: Comment PR with PHPStan summary
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          try {
            const reportData = fs.readFileSync('phpstan-report.json', 'utf8');
            const report = JSON.parse(reportData);

            const errorCount = report.totals?.errors || 0;
            const fileCount = report.totals?.file_errors || 0;

            if (errorCount > 0) {
              const comment = '## 🔍 PHPStan 静态分析报告\n\n' +
                '**发现 ' + errorCount + ' 个问题**，涉及 ' + fileCount + ' 个文件\n\n' +
                '### 主要问题类型\n' +
                '- 缺少类型声明\n' +
                '- 类型不匹配\n' +
                '- 逻辑错误\n\n' +
                '### 如何查看详情\n' +
                '📥 完整报告已保存为 Artifact，可在 Actions 页面下载查看。\n\n' +
                '### 建议\n' +
                '建议逐步修复这些问题以提高代码质量。可以先从 level 6 降低到 level 5 以减少检查严格度。';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('No PHPStan issues found or report file missing');
          }

  php-cs-fixer:
    runs-on: ubuntu-latest
    name: PHP CS Fixer
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: php-cs-fixer, composer:v2, cs2pr

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run PHP CS Fixer and generate report
      continue-on-error: true
      run: |
        vendor/bin/php-cs-fixer fix --dry-run --diff --format=checkstyle > php-cs-fixer-report.xml || true

    - name: Show annotations in PR
      if: always()
      run: |
        cat php-cs-fixer-report.xml | cs2pr

    - name: Upload PHP CS Fixer Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: php-cs-fixer-report
        path: php-cs-fixer-report.xml
        retention-days: 30

    - name: Comment PR with summary
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const xml2js = require('xml2js');

          try {
            const xmlData = fs.readFileSync('php-cs-fixer-report.xml', 'utf8');
            const parser = new xml2js.Parser();
            const result = await parser.parseStringPromise(xmlData);

            let issueCount = 0;
            let fileCount = 0;
            if (result.checkstyle && result.checkstyle.file) {
              fileCount = result.checkstyle.file.length;
              result.checkstyle.file.forEach(file => {
                if (file.error) {
                  issueCount += file.error.length;
                }
              });
            }

            const comment = `## 🎨 PHP CS Fixer Report

            **发现代码风格问题**: ${issueCount} 个问题，涉及 ${fileCount} 个文件

            ### 如何修复

            在本地运行以下命令自动修复：
            \`\`\`bash
            vendor/bin/php-cs-fixer fix
            \`\`\`

            📥 详细报告已保存为 Artifact，可在 Actions 页面下载查看。
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('No issues found or report file missing');
          }

  security:
    runs-on: ubuntu-latest
    name: Security Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Security Check
      uses: symfonycorp/security-checker-action@v5
