# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Psalm Security Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '37 18 * * 3'  # 每周三18:37（UTC时间）运行
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: read

jobs:
  php-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read                # 用于拉取代码
      security-events: write        # 用于上传安全扫描结果
      actions: read                 # 私有仓库上传结果需此权限

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 仅拉取最新代码，加快速度

      # 1. 配置PHP 8.3环境（确保扩展生效）
      - name: Setup PHP 8.3 with required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: xsl, sockets, gd  # 解决项目依赖的扩展问题
          ini-values: memory_limit=-1   # 避免内存不足
          tools: composer:v2            # 强制Composer 2
          coverage: none

      # 2. 验证环境（确认PHP版本和扩展正确）
      - name: Verify PHP & Extensions
        run: |
          php -v  # 确认输出PHP 8.3.x
          php -m | grep -E "xsl|sockets|gd"  # 确认3个扩展已启用

      # 3. 安装项目依赖（已成功，无需改动）
      - name: Install Project Dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist
          composer dump-autoload  # 确保自动加载文件最新

      # 4. 关键修复：直接本地执行Psalm，跳过镜像内Composer重装
      # 原因：原镜像会重新执行composer install，可能破坏本地环境
      - name: Run Psalm Security Scan (Local Execution)
        run: |
          # 1. 全局安装Psalm（已成功，无需改动）
          composer global require vimeo/psalm:^5.0 --no-progress --quiet
          # 2. 加入全局Composer的bin目录到环境变量（确保能找到psalm命令）
          echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH
          # 3. 验证Psalm版本（调试用，可保留）
          psalm --version
          # 4. 关键修复：Psalm 5.x正确参数，直接在--report中指定格式
          # 格式：--report=文件名:格式 （sarif格式需显式指定）
          psalm --no-cache --report=results.sarif:sarif
        continue-on-error: false  # 扫描失败则终止

      # 5. 上传扫描结果（仅当文件存在时执行）
      - name: Upload Security Scan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./results.sarif
        if: success()