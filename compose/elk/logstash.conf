input {
  # 从 Beats 接收日志
  beats {
    port => 5044
  }

  # 从 TCP 接收日志
  tcp {
    port => 5000
    codec => json
  }

  # 从 HTTP 接收日志
  http {
    port => 8080
    codec => json
  }
}

filter {
  # JSON 解析
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
      tag_on_failure => ["_jsonparsefailure"]
    }
  }

  # 时间戳处理
  date {
    match => [
      "timestamp",
      "ISO8601",
      "yyyy-MM-dd HH:mm:ss.SSS",
      "dd/MMM/yyyy:HH:mm:ss Z"
    ]
    target => "@timestamp"
    tag_on_failure => ["_dateparsefailure"]
  }

  # 统一添加应用标识
  mutate {
    add_field => {
      "application" => "windblog"
    }
  }

  # PHP 错误日志处理
  if [type] == "php-error" {
    grok {
      match => { "message" => "\[%{HTTPDATE:timestamp}\] %{LOGLEVEL:level}: %{GREEDYDATA:error_message}" }
      tag_on_failure => ["_phperrorgrokfailure"]
    }
  }

  # 访问日志处理
  if [type] == "access" {
    grok {
      match => {
        "message" => '%{IPORHOST:client_ip} - %{DATA:user} \[%{HTTPDATE:timestamp}\] "%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}" %{NUMBER:status_code:int} %{NUMBER:bytes:int} "%{DATA:referer}" "%{DATA:user_agent}"'
      }
      tag_on_failure => ["_accessgrokfailure"]
    }
  }
}

output {
  # 输出到 Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    index => "windblog-logs-%{+YYYY.MM.dd}"
    ilm_enabled => false
    manage_template => true
    template_name => "windblog-logs"
    template_overwrite => true
    flush_size => 500
    idle_flush_time => 10
  }

  # 调试输出（生产环境注释）
  # stdout { codec => rubydebug }
}
